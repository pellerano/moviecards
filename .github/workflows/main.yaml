name: CI
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Download repository
        uses: actions/checkout@v2

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Store generate package for deployment
        uses: actions/upload-artifact@v4
        with:
          name: moviecards-java
          path: '${{ github.workspace }}/target/*.jar'
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download repository
        uses: actions/checkout@v2

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install Chrome and ChromeDriver for E2E tests
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

          sudo dpkg -i google-chrome-stable_current_amd64.deb

          sudo apt --fix-broken install -y 

          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)

          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip

          unzip chromedriver.zip

          chmod +x chromedriver

          sudo mv chromedriver /usr/local/bin/
      - name: Run App for E2E tests
        run: mvn spring-boot:run & sleep 60

      - name: Run Unit, Integration and E2E tests.
        run: mvn clean verify
  qa:
    needs: test
    runs-on: self-hosted
    continue-on-error: true

    steps:
      - name: Download repository
        uses: actions/checkout@v2

      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Review QA with SonarQube
        run: |
          mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=rootadmin
  deploy:
    runs-on: ubuntu-latest
    needs: qa
    if: github.ref=='refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Aprobaci√≥n manual
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.TOKEN }}
          approvers: pellerano

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1A9B2B93F07C4EF88AD06D058A79C62D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DEC5E340777A4460BC769C3F4C65E363 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F59B4AE5AE02434DB0669CC37A3DD0E6 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-pellerano'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{secrets.AZUREAPPSERVICE_PUBLISHPROFILE_087C5AA638674F1C8A94DA8C7A3ABFF8 }}
